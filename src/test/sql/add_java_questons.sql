INSERT INTO questions (question, answer)
VALUES ('4 принципа ООП', 'Наследование, полиморфизм, инкапсуляция, абстракция'),
       ('Что такое JRE?',
        'JRE, Java Runtime Environment (Среда времени выполнения Java) - минимально-необходимая реализация виртуальной машины для исполнения Java-приложений. Состоит из JVM и стандартного набора библиотек классов Java'),
       ('Что такое JDK?',
        'JDK, Java Development Kit (Комплект разработки на Java) - JRE и набор инструментов разработчика приложений на языке Java, включающий в себя компилятор Java, стандартные библиотеки классов Java, примеры, документацию, различные утилиты.'),
       ('Что такое JVM?',
        'JVM, Java Virtual Machine (Виртуальная машина Java) — основная часть среды времени исполнения Java (JRE). Виртуальная машина Java исполняет байт-код Java, предварительно созданный из исходного текста Java-программы компилятором Java. JVM может также использоваться для выполнения программ, написанных на других языках программирования.'),
       ('Какие существуют модификаторы доступа?', 'public, protected, default, private.'),
       -- 3.03.2022
       ('Что такое инкапсуляция?', 'Инкапсуляция – это свойство системы, позволяющее объединить данные и методы, работающие с ними, в классе и скрыть детали реализации от пользователя, открыв только то, что необходимо при последующем использовании.
Цель инкапсуляции — уйти от зависимости внешнего интерфейса класса (то, что могут использовать другие классы) от реализации. Чтобы малейшее изменение в классе не влекло за собой изменение внешнего поведения класса..'),
       ('Что такое наследование?', 'Наследование – это свойство системы, позволяющее описать новый класс на основе уже существующего с частично или полностью заимствующейся функциональностью.
Класс, от которого производится наследование, называется предком, базовым или родительским. Новый класс – потомком, наследником или производным классом.'),
       ('Что такое полиморфизм?', 'Полиморфизм – это свойство системы использовать объекты с одинаковым интерфейсом без информации о типе и внутренней структуре объекта.
Преимуществом полиморфизма является то, что он помогает снижать сложность программ, разрешая использование одного и того же интерфейса для задания единого набора действий. Выбор же конкретного действия, в зависимости от ситуации, возлагается на компилятор языка программирования. Отсюда следует ключевая особенность полиморфизма - использование объекта производного класса, вместо объекта базового (потомки могут изменять родительское поведение, даже если обращение к ним будет производиться по ссылке родительского типа).'),
       ('Что такое абстракция?',
        'Абстрагирование – это способ выделить набор общих характеристик объекта, исключая из рассмотрения частные и незначимые. Соответственно, абстракция – это набор всех таких характеристик.'),
       ('Расскажите про основные понятия ООП: «класс», «объект», «интерфейс».', 'Класс – это способ описания сущности, определяющий состояние и поведение, зависящее от этого состояния, а также правила для взаимодействия с данной сущностью (контракт).
С точки зрения программирования класс можно рассматривать как набор данных (полей, атрибутов, членов класса) и функций для работы с ними (методов).
С точки зрения структуры программы, класс является сложным типом данных.
Объект (экземпляр) – это отдельный представитель класса, имеющий конкретное состояние и поведение, полностью определяемое классом. Каждый объект имеет конкретные значения атрибутов и методы, работающие с этими значениями на основе правил, заданных в классе.
Интерфейс – это набор методов класса, доступных для использования. Интерфейсом класса будет являться набор всех его публичных методов в совокупности с набором публичных атрибутов. По сути, интерфейс специфицирует класс, чётко определяя все возможные действия над ним.'),
       ('Что такое ранне (статическое) связывание?',
        'Присоединение вызова метода к телу метода называется связыванием. Если связывание проводится компилятором (компоновщиком) перед запуском программы, то оно называется статическим или ранним связыванием (early binding).'),
       ('Что такое позднее (динамическое) связывание?',
        'позднее связывание (late binding) это связывание, проводимое непосредственно во время выполнения программы, в зависимости от типа объекта. Позднее связывание также называют динамическим (dynamic) или связыванием на стадии выполнения (runtime binding). В языках, реализующих позднее связывание, должен существовать механизм определения фактического типа объекта во время работы программы, для вызова подходящего метода. Иначе говоря, компилятор не знает тип объекта, но механизм вызова методов определяет его и вызывает соответствующее тело метода. Механизм позднего связывания зависит от конкретного языка, но нетрудно предположить, что для его реализации в объекты должна включаться какая-то дополнительная информация. ' ||
        'Для всех методов Java используется механизм позднего (динамического) связывания, если только метод не был объявлен как final (приватные методы являются final по умолчанию).'),
       ('Что такое Classloader?',
        'Загрузчик классов является частью JRE, которая динамически загружает Java классы в JVM. Обычно классы загружаются только по запросу. Система исполнения в Java не должна знать о файлах и файловых системах благодаря загрузчику классов. Делегирование является важной концепцией, которую выполняет загрузчик. Загрузчик классов отвечает за поиск библиотек, чтение их содержимого и загрузку классов, содержащихся в библиотеках. Эта загрузка обычно выполняется «по требованию», поскольку она не происходит до тех пор, пока программа не вызовет класс. Класс с именем может быть загружен только один раз данным загрузчиком классов.'),
       ('О чем говорит ключевое слово final?', 'Модификатор final может применяться к переменным, параметрам методов, полям и методам класса или самим классам. Класс не может иметь наследников; Метод не может быть переопределен в классах наследниках;
 Поле не может изменить свое значение после инициализации; Параметры методов не могут изменять своё значение внутри метода; Локальные переменные не могут быть изменены после присвоения им значения.'),
       ('Какими значениями инициализируются переменные по умолчанию?',
        'Числа инициализируются 0 или 0.0; char — \u0000; boolean — false; Объекты (в том числе String) — null.'),
       ('Что вы знаете о функции main()?',
        'Метод main() — точка входа в программу. В приложении может быть несколько таких методов. Если метод отсутствует, то компиляция возможна, но при запуске будет получена ошибка `Error: Main method not found`.'),
       ('Какие логические операции и операторы вы знаете?', '&: Логическое AND (И); &&: Сокращённое AND; |: Логическое OR (ИЛИ); ||: Сокращённое OR; ^: Логическое XOR (исключающее OR (ИЛИ)); !: Логическое унарное NOT (НЕ);
&=: AND с присваиванием; |=: OR с присваиванием; ^=: XOR с присваиванием; ==: Равно; !=: Не равно; ?:: Тернарный (троичный) условный оператор.'),
       ('Что такое тернарный оператор выбора?',
        'Тернарный условный оператор ?: - оператор, которым можно заменить некоторые конструкции операторов if-then-else. Выражение записывается в следующей форме: условие ? выражение1 : выражение2')
-- 26.05.2022
;
